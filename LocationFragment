package com.example.alexbrito.individuaproject;

import android.app.Activity;
import android.content.Context;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import org.json.JSONException;
import org.json.JSONObject;

import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.List;

public class LocationFragment extends Fragment {

    private static final String TAG = "LocationFragment";
    static ArrayList<MBTA> recyclerViewData;
    static private RecyclerView locationRecyclerView;
    static private LocationAdapter locationAdapter;


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Log.d(TAG,"onCreate() called");
       new FetchItemsTask(getActivity().getApplicationContext(), getActivity()).execute();

    }


    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_stops, container, false);
        locationRecyclerView = (RecyclerView) view.findViewById(R.id.stops_recycler_view);
        locationRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        locationAdapter = new LocationAdapter();
        //updateUI();


        return view;
    }

    private class LocationHolder extends RecyclerView.ViewHolder implements View.OnClickListener {

        private static final String TAG = "AddressHolder";

         TextView mStopNameTV;
         TextView departureTV;
         MBTA mbta;

        public LocationHolder(LayoutInflater inflater, ViewGroup parent) {
            super(inflater.inflate(R.layout.list_item_stops, parent, false));
            itemView.setOnClickListener(this);
            Log.d(TAG, "AddressHolder: called");

            mStopNameTV = (TextView) itemView.findViewById(R.id.stopName);
            departureTV = (TextView) itemView.findViewById(R.id.departure);
        }

        public void bind(MBTA mData){
           mbta = mData;
            mStopNameTV.setText(mbta.getId());
            departureTV.setText(mbta.getDate());

        }


        @Override
        public void onClick(View view){

        }
    }

    private class LocationAdapter extends RecyclerView.Adapter<LocationHolder>{

        private static final String TAG = "AddressAdapter";

        private List<MBTA> mbta;


        public LocationAdapter(){};
        public LocationAdapter(List<MBTA> mData){
            mbta = mData;

            Log.d(TAG, "LocationAdapter: called");
        }
        public void updateData(List<MBTA> mData){
            mbta = mData;

            Log.d(TAG, "LocationAdapter: called");
        }


        @Override
        public LocationHolder onCreateViewHolder( ViewGroup parent, int position) {
            Log.d(TAG, "onCreateViewHolder: called" + TAG);
            LayoutInflater layoutInflater = LayoutInflater.from(getActivity());
            return new LocationHolder(layoutInflater, parent);
        }

        @Override
        public void onBindViewHolder(LocationHolder locationHolder, int position) {
            Log.d(TAG, "onBindViewHolder: in Adapter");
            MBTA mbtaInfo = mbta.get(position);
            locationHolder.bind(mbtaInfo);
        }

        @Override
        public int getItemCount() {

            return mbta.size();
        }

    }

    public void updateUI(List<MBTA> mbta) {
        //MBTALab mbtaLab = MBTALab.get(getActivity());
        //List<MBTA> mbta = mbtaLab.getStops();
        locationAdapter = new LocationAdapter(mbta);
        locationRecyclerView.setAdapter(locationAdapter);
    }

    private static class FetchItemsTask extends AsyncTask<Void, Void, String>{
        private WeakReference<Context> mainActivityWeakReference;

        private JSONObject jsonObject;
        private Context context;

        private Activity activity;
        FetchItemsTask(Context context, Activity activity) {
            mainActivityWeakReference = new WeakReference<>(context);
            this.context = context;
            this.activity = activity;
        }


        @Override
        protected String doInBackground(Void... voids) {
            Context context = mainActivityWeakReference.get();
            recyclerViewData = new ArrayList<>();


            Log.i(TAG, "Fetched contents of URL: " );
            try {
                new MBTAFetch().fetchJSONItems();

            } catch (JSONException e) {
                e.printStackTrace();
            }

            try {
                jsonObject = new MBTAFetch().fetchJSONItems();
            } catch (JSONException e) {
                e.printStackTrace();
            }

            try {

                recyclerViewData = new MBTAFetch().parseJSON(jsonObject);



                //locationAdapter = new LocationAdapter(recyclerViewData);
                //locationRecyclerView.setAdapter(locationAdapter);
            } catch (JSONException e) {
                e.printStackTrace();
            }

            return null;

        }


        @Override
        protected void onPostExecute(String s) {
            super.onPostExecute(s);


            Context context = mainActivityWeakReference.get();

            locationAdapter.updateData(recyclerViewData);
            locationRecyclerView.setAdapter(locationAdapter);
            //updateUI(recyclerViewData);

        }


    }



}
